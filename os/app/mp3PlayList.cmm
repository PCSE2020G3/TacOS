#include <fs.hmm>
#include <util.hmm>
#include "appUtil.hmm"
#include "mp3PlayList.hmm"
#include "mp3Files.hmm"

int[] recent = array(100);
int[] most = array(100);
int[] mostCount = array(100);
char[][] recentPlayList = array(7, 13);
char[][] mostPlayList = array(7, 13);

public void initPlayList(){
  for (int i = 0; i < 100; i=i+1) {
    recent[i] = -1;
    most[i] = -1;
  }
}

public void updateRecentPlayList(int fileNumber){
  int newNumber = 0;
  int i = 0;

  for (; i < 100; i=i+1){
    if(recent[i] == -1){
      break;
    } else if (recent[i] == fileNumber){
      break;
    }
  }

  for (; 0 < i; i=i-1){
    recent[i] = recent[i-1];
    recentPlayList[i] = recentPlayList[i-1];
  }
  recent[0] = fileNumber;
  recentPlayList[0] = mp3FilesGetName(fileNumber);
}

public void updateMostPlayList(int fileNumber){
  if (mostCount[fileNumber] == 0) {
    mostCount[fileNumber] = 1;
  } else {
    mostCount[fileNumber] = mostCount[fileNumber] + 1;
  }

  int newNumber = 0;
  int i = 0;

  for (; i < 100; i=i+1){
    if (most[i] == -1){
      break;
    } else if (mostCount[most[i]] < mostCount[fileNumber]){
      break;
    }
  }

  for (; 0 < i; i=i-1){
    most[i] = most[i-1];
    mostPlayList[i] = mostPlayList[i-1];
  }
  most[0] = fileNumber;
  recentPlayList[0] = mp3FilesGetName(fileNumber);
}

// n 番目ファイル名を返す（1<=n && n<=100）
public char[] getRecentMp3Name(int n) {
  if (1<=n && n<=100) {
    return recentPlayList[n-1];
  }
  return null;
}

public char[][] getSevenRecentMp3Name(int start){
  for (int i=0; i<7; i=i+1){
    recentPlayList[i] = getRecentMp3Name(start + i + 1);
  }
  return recentPlayList;
}

// n 番目ファイル名を返す（1<=n && n<=100）
public char[] getMostMp3Name(int n) {
  if (1<=n && n<=100) {
    return mostPlayList[n-1];
  }
  return null;
}

public char[][] getAllMostMp3Name(int start){
  for (int i=0; i<7; i=i+1){
    mostPlayList[i] = getMostMp3Name(start + i + 1);
  }
  return mostPlayList;
}
